{
	"info": {
		"_postman_id": "9185e2b1-f605-436f-b72a-13c256510026",
		"name": "Otus Market Idempotency Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12899390"
	},
	"item": [
		{
			"name": "Create Billing Account",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let requestBody = pm.request.body.raw;\r",
							"let parsedBody = JSON.parse(requestBody);\r",
							"pm.environment.set(\"accountNumber\", parsedBody.accountNumber);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"accountNumber\": \"1234567890123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/billing/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add First Item to Warehouse Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let requestBody = pm.request.body.raw;\r",
							"let parsedBody = JSON.parse(requestBody);\r",
							"pm.environment.set(\"item1name\", parsedBody.name);\r",
							"pm.environment.set(\"item1quantity\", parsedBody.quantity);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Keyboard Logitech K120\",\r\n    \"quantity\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/warehouse",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"warehouse"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit Funds With First Request-Id Try #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"balance\", jsonData.balance);\r",
							"pm.test(\"Баланс пополнился изначальной суммой\", function () {\r",
							"    let balanceEnv = Number(pm.environment.get(\"balance\"));\r",
							"    pm.expect(balanceEnv).to.eql(jsonData.balance);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Request-ID",
						"value": "{{requestId1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"accountNumber\": \"{{accountNumber}}\",\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/billing/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit Funds With First Request-Id Try #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Баланс не изменился, т.к. использован тот же X-Request-ID\", function () {\r",
							"    let balanceEnv = Number(pm.environment.get(\"balance\"));\r",
							"    pm.expect(balanceEnv).to.eql(jsonData.balance);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Request-ID",
						"value": "{{requestId1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"accountNumber\": \"{{accountNumber}}\",\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/billing/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit Funds With Second Request-Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Баланс изменился, т.к. использован другой X-Request-ID\", function () {\r",
							"    let balanceEnv = Number(pm.environment.get(\"balance\"));\r",
							"    pm.expect(jsonData.balance).to.eql(balanceEnv + 1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Request-ID",
						"value": "{{requestId2}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"accountNumber\": \"{{accountNumber}}\",\r\n    \"amount\": 1000.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/billing/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order With First Request Id Try #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"orderId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Request-ID",
						"value": "{{requestId1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{item1name}}\",\r\n            \"price\": \"100.0\",\r\n            \"quantity\": 1\r\n        }\r\n    ],\r\n    \"accountNumber\": \"{{accountNumber}}\",\r\n    \"deliveryAddress\": \"г. Москва, ул. Академика Королева, д.12\",\r\n    \"deliveryDate\": \"2030-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order With First Request Id Try #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"OrderId из повторного запроса такой же, как и у первого, т.к. был использован тот же X-Request-ID\", function () {\r",
							"    let orderIdEnv = Number(pm.environment.get(\"orderId\"));\r",
							"    pm.expect(orderIdEnv).to.eql(jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Request-ID",
						"value": "{{requestId1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{item1name}}\",\r\n            \"price\": \"100.0\",\r\n            \"quantity\": 1\r\n        }\r\n    ],\r\n    \"accountNumber\": \"{{accountNumber}}\",\r\n    \"deliveryAddress\": \"г. Москва, ул. Академика Королева, д.12\",\r\n    \"deliveryDate\": \"2030-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order With Second Request Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус ответа - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"OrderId из запроса не такой же, как и у первого, т.к. был использован другой X-Request-ID\", function () {\r",
							"    let orderIdEnv = Number(pm.environment.get(\"orderId\"));\r",
							"    pm.expect(orderIdEnv).to.not.eql(jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Request-ID",
						"value": "{{requestId2}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{item1name}}\",\r\n            \"price\": \"100.0\",\r\n            \"quantity\": 1\r\n        }\r\n    ],\r\n    \"accountNumber\": \"{{accountNumber}}\",\r\n    \"deliveryAddress\": \"г. Москва, ул. Академика Королева, д.12\",\r\n    \"deliveryDate\": \"2030-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		}
	]
}